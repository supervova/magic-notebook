@charset "UTF-8";
.d-none {
  display: none !important; }

.d-inline {
  display: inline !important; }

.d-inline-block {
  display: inline-block !important; }

.d-block {
  display: block !important; }

.d-table {
  display: table !important; }

.d-table-row {
  display: table-row !important; }

.d-table-cell {
  display: table-cell !important; }

.d-flex {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important; }

.d-inline-flex {
  display: -webkit-inline-box !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important; }

@media (min-width: 568px) {
  .d-sm-none {
    display: none !important; }
  .d-sm-inline {
    display: inline !important; }
  .d-sm-inline-block {
    display: inline-block !important; }
  .d-sm-block {
    display: block !important; }
  .d-sm-table {
    display: table !important; }
  .d-sm-table-row {
    display: table-row !important; }
  .d-sm-table-cell {
    display: table-cell !important; }
  .d-sm-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important; }
  .d-sm-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; } }

@media (min-width: 768px) {
  .d-md-none {
    display: none !important; }
  .d-md-inline {
    display: inline !important; }
  .d-md-inline-block {
    display: inline-block !important; }
  .d-md-block {
    display: block !important; }
  .d-md-table {
    display: table !important; }
  .d-md-table-row {
    display: table-row !important; }
  .d-md-table-cell {
    display: table-cell !important; }
  .d-md-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important; }
  .d-md-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; } }

@media (min-width: 1024px) {
  .d-lg-none {
    display: none !important; }
  .d-lg-inline {
    display: inline !important; }
  .d-lg-inline-block {
    display: inline-block !important; }
  .d-lg-block {
    display: block !important; }
  .d-lg-table {
    display: table !important; }
  .d-lg-table-row {
    display: table-row !important; }
  .d-lg-table-cell {
    display: table-cell !important; }
  .d-lg-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important; }
  .d-lg-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; } }

@media (min-width: 1150px) {
  .d-xl-none {
    display: none !important; }
  .d-xl-inline {
    display: inline !important; }
  .d-xl-inline-block {
    display: inline-block !important; }
  .d-xl-block {
    display: block !important; }
  .d-xl-table {
    display: table !important; }
  .d-xl-table-row {
    display: table-row !important; }
  .d-xl-table-cell {
    display: table-cell !important; }
  .d-xl-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important; }
  .d-xl-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; } }

@media (min-width: 1280px) {
  .d-xxl-none {
    display: none !important; }
  .d-xxl-inline {
    display: inline !important; }
  .d-xxl-inline-block {
    display: inline-block !important; }
  .d-xxl-block {
    display: block !important; }
  .d-xxl-table {
    display: table !important; }
  .d-xxl-table-row {
    display: table-row !important; }
  .d-xxl-table-cell {
    display: table-cell !important; }
  .d-xxl-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important; }
  .d-xxl-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; } }

@media (min-width: 1920px) {
  .d-king-size-none {
    display: none !important; }
  .d-king-size-inline {
    display: inline !important; }
  .d-king-size-inline-block {
    display: inline-block !important; }
  .d-king-size-block {
    display: block !important; }
  .d-king-size-table {
    display: table !important; }
  .d-king-size-table-row {
    display: table-row !important; }
  .d-king-size-table-cell {
    display: table-cell !important; }
  .d-king-size-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important; }
  .d-king-size-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; } }

@media print {
  .d-print-none {
    display: none !important; }
  .d-print-inline {
    display: inline !important; }
  .d-print-inline-block {
    display: inline-block !important; }
  .d-print-block {
    display: block !important; }
  .d-print-table {
    display: table !important; }
  .d-print-table-row {
    display: table-row !important; }
  .d-print-table-cell {
    display: table-cell !important; }
  .d-print-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important; }
  .d-print-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; } }

:root {
  --color-ink-normal:                   rgba(0, 0, 0, 0.87);
  --color-ink-normal-muted:             rgba(0, 0, 0, 0.54);
  --color-ink-normal-hint:              rgba(0, 0, 0, 0.38);
  --color-ink-normal-disabled:          rgba(0, 0, 0, 0.38);
  --color-ink-normal-icon:              rgba(0, 0, 0, 0.22);
  --color-ink-normal-border:            rgba(0, 0, 0, 0.12);
  --color-ink-normal-link:              #6e53f3;
  --color-ink-normal-focus-outline:     #e7e2fd;
  --size-1:                             .8rem;
  --size-2:                             calc(var(--size-1) * 2);
  --size-3:                             calc(var(--size-1) * 3);
  --size-4:                             calc(var(--size-1) * 4);
  --size-5:                             calc(var(--size-1) * 5);
  --size-6:                             calc(var(--size-1) * 6);
  --size-7:                             calc(var(--size-1) * 7);
  --size-8:                             calc(var(--size-1) * 8);
  --size-line:                          var(--size-3);
  --type-body-copy-vr-offset:           .6rem; }

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: rgba(0, 0, 0, 0); }

abbr[title] {
  border-bottom: 2px solid rgba(0, 0, 0, 0.12);
  text-decoration: none; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

[disabled] {
  cursor: not-allowed; }

*,
*::before,
*::after {
  border-style: solid;
  border-width: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

[tabindex='-1']:focus {
  outline: 0 !important; }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block; }

html {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  font-size: 62.5%;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
  overflow-y: scroll;
  min-height: 100%; }

@-ms-viewport {
  width: device-width; }

body {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-align: left; }

::-moz-selection {
  background: #f36e53;
  color: white;
  text-shadow: none; }

::selection {
  background: #f36e53;
  color: white;
  text-shadow: none; }

a {
  -webkit-text-decoration-skip: objects; }
  a:active, a:hover, a:focus {
    outline: 0; }
  a:not([href]):not([tabindex]) {
    color: inherit;
    text-decoration: none; }
    a:not([href]):not([tabindex]):focus, a:not([href]):not([tabindex]):hover {
      -webkit-text-decoration-skip: ink;
      text-decoration-skip-ink: auto; }

abbr[title] {
  cursor: help; }

address {
  font-style: normal;
  line-height: inherit; }

blockquote, q {
  quotes: none; }

dfn {
  font-style: italic; }

nav ol,
nav ul,
nav ul:not([class]) {
  list-style: none; }

pre,
code,
kbd,
samp {
  font-family: "Fira Code", Menlo, Courier, "Courier New", monospace; }

pre {
  -ms-overflow-style: scrollbar;
  overflow: auto; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  width: 100%; }

th {
  text-align: inherit; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
  max-width: 100%; }

audio :not([controls]) {
  display: none; }

figure {
  margin-right: 0;
  margin-left: 0; }

iframe {
  border: 0; }

img {
  display: inline-block;
  font-style: italic;
  height: auto; }

svg {
  overflow: hidden;
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
  min-width: 0; }

legend {
  line-height: inherit;
  width: 100%; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  cursor: pointer; }

button * {
  pointer-events: none; }

label {
  display: inline-block; }

input,
button,
select,
optgroup,
textarea {
  line-height: inherit; }

input[type='date'],
input[type='time'],
input[type='datetime-local'],
input[type='month'] {
  -webkit-appearance: listbox;
  -moz-appearance: listbox;
  appearance: listbox; }

optgroup {
  font-weight: bolder; }

select::-ms-expand {
  display: none; }

textarea {
  resize: vertical; }

[type='number'] {
  width: auto; }

[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

[type='search']::-webkit-search-cancel-button {
  -webkit-appearance: none;
  appearance: none; }

a,
area,
button,
[role='button'],
input,
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation; }

output {
  display: inline-block; }

progress {
  display: inline-block; }

summary {
  cursor: pointer;
  display: block; }

[aria-busy='true'] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

body {
  background-color: white;
  color: rgba(0, 0, 0, 0.87);
  font-family: "Helvetica Neue", Helvetica, -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1.7rem;
  line-height: 1.412;
  text-align: left;
  scroll-behavior: smooth;
  min-height: 100%; }

a {
  color: #6e53f3;
  text-decoration: none;
  -webkit-transition: color 0.1s cubic-bezier(0.4, 0, 0.2, 1);
  transition: color 0.1s cubic-bezier(0.4, 0, 0.2, 1); }
  a:hover {
    color: #6e53f3 -hover;
    text-decoration: underline; }

address,
blockquote,
dl,
figure,
iframe,
ol,
p,
pre,
ul {
  margin-top: 0;
  margin-bottom: var(--size-line); }

.has-vr-offset,
h1 + address,
h2 + address,
address:first-child:not([class]),
h1 + blockquote,
h2 + blockquote,
blockquote:first-child:not([class]),
h1 + dl,
h2 + dl,
dl:first-child:not([class]),
h1 + ol,
h2 + ol,
ol:first-child:not([class]),
h1 + p,
h2 + p,
p:first-child:not([class]),
h1 + pre,
h2 + pre,
pre:first-child:not([class]),
h1 + ul,
h2 + ul,
ul:first-child:not([class]) {
  margin-top: var(--type-body-copy-vr-offset); }

.lead {
  font-size: 2rem;
  line-height: 1.2; }

:lang(ru) blockquote::before,
:lang(ru) q::before {
  content: '«'; }

:lang(ru) blockquote::after,
:lang(ru) q::after {
  content: '»'; }

:lang(en) blockquote::before,
:lang(en) q::before {
  content: '“'; }

:lang(en) blockquote::after,
:lang(en) q::after {
  content: '”'; }

.blockquote > :last-child {
  margin-bottom: 0; }

.blockquote footer {
  color: rgba(0, 0, 0, 0.54); }
  .blockquote footer::before {
    content: '\2014\00A0'; }

ul {
  list-style-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%225%22%20height%3D%227%22%20viewBox%3D%220%200%205%207%22%3E%3Ccircle%20cx%3D%222.5%22%20cy%3D%222.5%22%20r%3D%222.5%22%20fill-opacity%3D%22.38%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E");
  padding-left: 1.6rem; }
  @media (min-width: 768px) {
    ul {
      padding-left: 0; } }

ol {
  padding-left: 2rem; }

li:not(:last-child),
.list-caption {
  margin-bottom: 0.8rem; }

.list-caption {
  display: block; }

ol ol,
ul ul,
ol ul,
ul ol {
  margin-top: var(--size-1);
  margin-bottom: 0;
  padding-left: var(--size-2); }

.list.is-unstyled,
nav ol,
nav ul {
  list-style: none;
  padding-left: 0; }

.list.is-inline {
  list-style: none;
  padding-left: 0; }
  .list.is-inline li {
    display: inline-block; }
    .list.is-inline li:not(:last-child) {
      margin-right: .5rem; }

dt {
  font-weight: 500; }

dd {
  margin-left: 0; }

hr {
  border: 0;
  border-top: 0.1rem solid rgba(0, 0, 0, 0.12);
  margin-top: 7.1rem;
  margin-bottom: 7.2rem; }

.nobr {
  white-space: nowrap; }

.note {
  color: rgba(0, 0, 0, 0.54); }

.sr-only {
  border: 0;
  clip: rect(0 0 0 0);
  white-space: nowrap;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  position: absolute;
  width: 1px;
  height: 1px; }

.text-hide {
  background-color: rgba(0, 0, 0, 0);
  border: 0;
  color: rgba(0, 0, 0, 0);
  font: 0/0 a;
  text-shadow: none; }

h1, h2 {
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", Helvetica, "Segoe UI", "Noto Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  -webkit-font-feature-settings: 'kern' 1, 'liga' 1;
  font-feature-settings: 'kern' 1, 'liga' 1; }
  @media (min-width: 768px) {
    h1, h2 {
      letter-spacing: -.1rem; } }

h1 {
  color: rgba(0, 0, 0, 0.87);
  font-size: 3.2rem;
  font-weight: 700;
  line-height: 1.25;
  margin: 0;
  padding-top: 0;
  padding-bottom: 0; }
  @media (min-width: 768px) {
    h1 {
      font-size: 6rem;
      line-height: 1.0667;
      padding-top: 1.4rem;
      padding-bottom: 1rem; } }

h2 {
  color: rgba(0, 0, 0, 0.87);
  font-size: 3.2rem;
  font-weight: 400;
  line-height: 1.25;
  margin: 0;
  padding-top: 1.6rem;
  padding-bottom: 1.6rem; }
  @media (min-width: 768px) {
    h2 {
      font-size: 3.2rem;
      font-weight: 700;
      line-height: 1.25; } }

address + h2,
blockquote + h2,
dl + h2,
ol + h2,
p + h2,
pre + h2,
ul + h2,
.h2.is-subhead {
  margin-top: calc(-1 * var(--type-body-copy-vr-offset)); }

h3, h4, h5, h6 {
  font-size: 100%;
  margin-top: 4.8rem;
  margin-bottom: 2.4rem; }
  h3:first-child, h4:first-child, h5:first-child, h6:first-child {
    margin-top: 0; }

h4 {
  color: #f56b99; }

h3 + h4 {
  margin-top: 2.4rem; }

h1:last-child, h2:last-child, h3:last-child, h4:last-child, h5:last-child, h6:last-child {
  margin-bottom: 0; }

.icon {
  display: inline-block;
  fill: rgba(0, 0, 0, 0.22);
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  vertical-align: -.4rem;
  -webkit-transition: fill 0.2s;
  transition: fill 0.2s;
  width: 2rem;
  height: 2rem; }

.btn, .modal__close {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 0;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-weight: 400;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle; }
  .btn:focus, .modal__close:focus {
    outline: 0; }

.btn {
  border-radius: 5px;
  -webkit-box-flex: 1;
  -ms-flex: 1 1 0px;
  flex: 1 1 0;
  font-size: 1.4rem;
  text-decoration: none;
  text-transform: uppercase;
  padding: 0 1.6rem;
  height: 4.8rem; }
  .btn:hover {
    text-decoration: none; }
  .btn:active {
    -webkit-box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12), inset 0 3px 5px rgba(0, 0, 0, 0.12), inset 0 0 0 100px rgba(0, 0, 0, 0.12);
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12), inset 0 3px 5px rgba(0, 0, 0, 0.12), inset 0 0 0 100px rgba(0, 0, 0, 0.12);
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }

.btn.is-primary,
.btn.is-whatsapp {
  -webkit-box-shadow: inset 0 2px 0 0 rgba(255, 255, 255, 0.16), inset 0 0 0 1px rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12);
  box-shadow: inset 0 2px 0 0 rgba(255, 255, 255, 0.16), inset 0 0 0 1px rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12);
  color: white;
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
  -webkit-transition: background-image 0.1s, -webkit-box-shadow 0.1s;
  transition: background-image 0.1s, -webkit-box-shadow 0.1s;
  transition: background-image 0.1s, box-shadow 0.1s;
  transition: background-image 0.1s, box-shadow 0.1s, -webkit-box-shadow 0.1s; }
  .btn.is-primary:hover,
  .btn.is-whatsapp:hover {
    -webkit-box-shadow: inset 0 2px 0 0 rgba(255, 255, 255, 0.16), inset 0 0 0 1px rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12);
    box-shadow: inset 0 2px 0 0 rgba(255, 255, 255, 0.16), inset 0 0 0 1px rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12);
    color: white; }
  .btn.is-primary:active,
  .btn.is-whatsapp:active {
    background-image: none; }
  .btn.is-primary:focus, .btn.is-primary.is-focused,
  .btn.is-whatsapp:focus,
  .btn.is-whatsapp.is-focused {
    -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.32), inset 0 1px 0 rgba(255, 255, 255, 0.32), 0 0 0 4px #e7e2fd;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.32), inset 0 1px 0 rgba(255, 255, 255, 0.32), 0 0 0 4px #e7e2fd; }

.btn.is-primary .icon,
.btn.is-whatsapp .icon {
  fill: rgba(255, 255, 255, 0.7);
  margin-right: 0.8rem; }

.btn.is-primary {
  background-color: #f5826b;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f69683), to(#f36e53));
  background-image: linear-gradient(#f69683, #f36e53); }
  .btn.is-primary:hover {
    background-image: -webkit-gradient(linear, left top, left bottom, from(#f8aa9b), to(#f5826b));
    background-image: linear-gradient(#f8aa9b, #f5826b); }

.btn.is-whatsapp {
  background-color: #0dba2a;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#0dba2a), to(#0a8a1f));
  background-image: linear-gradient(#0dba2a, #0a8a1f); }
  .btn.is-whatsapp:hover {
    background-image: -webkit-gradient(linear, left top, left bottom, from(#0fd22f), to(#0ba224));
    background-image: linear-gradient(#0fd22f, #0ba224); }

.btn.is-outline {
  background-color: rgba(0, 0, 0, 0);
  -webkit-box-shadow: inset 0 0 0 1px #f5826b;
  box-shadow: inset 0 0 0 1px #f5826b;
  color: #f5826b;
  -webkit-transition: background-color 0.1s, -webkit-box-shadow 0.1s;
  transition: background-color 0.1s, -webkit-box-shadow 0.1s;
  transition: background-color 0.1s, box-shadow 0.1s;
  transition: background-color 0.1s, box-shadow 0.1s, -webkit-box-shadow 0.1s; }
  .btn.is-outline:hover {
    background-color: rgba(245, 130, 107, 0.12);
    color: #f5826b;
    -webkit-box-shadow: inset 0 0 0 1px #f5826b, 0 2px 4px -2px rgba(0, 0, 0, 0.12), 0 4px 8px -4px rgba(0, 0, 0, 0.12);
    box-shadow: inset 0 0 0 1px #f5826b, 0 2px 4px -2px rgba(0, 0, 0, 0.12), 0 4px 8px -4px rgba(0, 0, 0, 0.12); }
  .btn.is-outline:focus {
    -webkit-box-shadow: inset 0 0 0 1px #f5826b, 0 0 0 3px rgba(255, 255, 255, 0.4);
    box-shadow: inset 0 0 0 1px #f5826b, 0 0 0 3px rgba(255, 255, 255, 0.4);
    outline: 0; }

.btn.is-link {
  background-color: rgba(0, 0, 0, 0);
  color: #6e53f3;
  font-size: inherit;
  font-weight: 400;
  text-decoration: none;
  text-transform: none;
  padding: 0;
  height: auto; }

.buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.buttons :first-child {
  margin-right: .4rem; }

.buttons :last-child {
  margin-left: .4rem; }

.form__group {
  position: relative;
  margin-bottom: 0.8rem;
  padding-left: 3.2rem; }
  @media (min-width: 768px) {
    .form__group {
      margin-bottom: 1.6rem; } }

.form__label.is-icon {
  margin-bottom: 0;
  position: absolute;
  top: 0.8rem;
  left: 0.8rem;
  width: 20px;
  height: 20px; }

.form__control {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-clip: padding-box;
  background-color: white;
  background-image: none;
  border-radius: 3px;
  border: 0.1rem solid rgba(0, 0, 0, 0.12);
  color: rgba(0, 0, 0, 0.54);
  display: block;
  margin: 0 0 .8rem;
  overflow: visible;
  padding: 1.1rem 1.2rem 1.1rem 1.9rem;
  -webkit-transition: border-color cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
  transition: border-color cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
  width: 100%; }
  .form__control:focus {
    color: rgba(0, 0, 0, 0.87);
    border-color: #f5826b;
    outline: 0; }

.form__control:not(:focus):invalid {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%3E%20%3Cpath%20fill%3D%22%23F25A5A%22%20d%3D%22M12%2C2%20C6.48%2C2%202%2C6.48%202%2C12%20C2%2C17.52%206.48%2C22%2012%2C22%20C17.52%2C22%2022%2C17.52%2022%2C12%20C22%2C6.48%2017.52%2C2%2012%2C2%20Z%20M13%2C17%20L11%2C17%20L11%2C15%20L13%2C15%20L13%2C17%20Z%20M13%2C13%20L11%2C13%20L11%2C7%20L13%2C7%20L13%2C13%20Z%22%2F%3E%20%3C%2Fsvg%3E");
  background-position: right 0.8rem center;
  background-repeat: no-repeat;
  -webkit-box-shadow: inset 0 0 0 3px #ff512e, 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12);
  box-shadow: inset 0 0 0 3px #ff512e, 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12); }

.form__feedback {
  display: none; }

.form__feedback.is-invalid {
  color: #c72100;
  font-size: 1.4rem;
  overflow: hidden;
  opacity: 0;
  height: 0;
  -webkit-transition: height 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: height 0.2s cubic-bezier(0.4, 0, 0.2, 1); }

.form__feedback.is-invalid > div {
  padding-top: rem(8);
  padding-bottom: rem(14); }

.form__control:not(:focus):invalid + .form__feedback.is-invalid {
  opacity: 1;
  height: rem(34); }

.form__verification {
  position: absolute;
  left: -5000px; }

figcaption {
  color: rgba(0, 0, 0, 0.54); }

.border,
.media-object__figure {
  border-radius: 5px;
  display: table;
  position: relative;
  overflow: hidden; }
  .border::after,
  .media-object__figure::after {
    border-radius: 5px;
    -webkit-box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12);
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12);
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0; }
  .border:empty,
  .media-object__figure:empty {
    display: none; }

.has-shadow-z3 {
  -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 9px 10px -3px rgba(0, 0, 0, 0.21), 0 18px 34px -7px rgba(0, 0, 0, 0.12);
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 9px 10px -3px rgba(0, 0, 0, 0.21), 0 18px 34px -7px rgba(0, 0, 0, 0.12); }

.has-shadow-z4 {
  -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 16px 17px -5px rgba(0, 0, 0, 0.19), 0 29px 53px -10px rgba(0, 0, 0, 0.12);
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 16px 17px -5px rgba(0, 0, 0, 0.19), 0 29px 53px -10px rgba(0, 0, 0, 0.12); }

.embed-responsive {
  display: block;
  padding: 0;
  overflow: hidden;
  position: relative;
  width: 100%; }
  .embed-responsive::before {
    content: '';
    display: block; }
  .embed-responsive .embed-responsive__item,
  .embed-responsive > iframe,
  .embed-responsive > embed,
  .embed-responsive > object,
  .embed-responsive > video {
    border: 0;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%; }

.embed-responsive.is-4by3::before {
  padding-top: 75%; }

iframe {
  border: 0; }
  .modal__body > iframe {
    margin-bottom: 0; }

@media (min-width: 568px) {
  .media-object {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
    margin-top: 3rem; } }

@media (min-width: 568px) {
  .media-object__figure {
    margin-right: 2.4rem; } }

@media (min-width: 768px) {
  .media-object__figure {
    margin-right: 3.2rem; } }

.media-object__body {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1; }

.container,
.main {
  padding-right: 1.6rem;
  padding-left: 1.6rem;
  margin-right: auto;
  margin-left: auto;
  width: 100%;
  max-width: 1024px; }
  @media (min-width: 568px) {
    .container,
    .main {
      padding-right: 2.4rem;
      padding-left: 2.4rem; } }
  @media (min-width: 768px) {
    .container,
    .main {
      padding-right: 3.2rem;
      padding-left: 3.2rem; } }
  @media (min-width: 1024px) {
    .container,
    .main {
      padding-right: 3.6rem;
      padding-left: 3.6rem; } }

.grid,
.section__header.is-magic {
  display: grid;
  grid-gap: 0.8rem;
  grid-template-columns: repeat(4, 1fr); }
  @media (min-width: 568px) {
    .grid,
    .section__header.is-magic {
      grid-template-columns: repeat(8, 1fr); } }
  @media (min-width: 1024px) {
    .grid,
    .section__header.is-magic {
      grid-template-columns: repeat(12, 1fr); } }

.has-wide-gutters {
  grid-gap: 2.4rem; }
  @media (min-width: 1024px) {
    .has-wide-gutters {
      grid-gap: 3.2rem; } }

.has-no-gutters {
  grid-gap: 0; }

.col-1 {
  grid-column: span 1; }

.col-2 .col-half {
  grid-column: span 2; }

.col-3 {
  grid-column: span 3; }

.col-4,
.col-full {
  grid-column: span 4; }

@media (min-width: 568px) {
  .col-sm-1 {
    grid-column: span 1; }
  .col-sm-2 {
    grid-column: span 2; }
  .col-sm-3 {
    grid-column: span 3; }
  .col-sm-4,
  .col-sm-half {
    grid-column: span 4; }
  .col-sm-5 {
    grid-column: span 5; }
  .col-sm-6 {
    grid-column: span 6; }
  .col-sm-7 {
    grid-column: span 7; }
  .col-sm-8,
  .col-sm-full {
    grid-column: span 8; } }

@media (min-width: 768px) {
  .col-md-1 {
    grid-column: span 1; }
  .col-md-2 {
    grid-column: span 2; }
  .col-md-3 {
    grid-column: span 3; }
  .col-md-4,
  .col-md-half {
    grid-column: span 4; }
  .col-md-5 {
    grid-column: span 5; }
  .col-md-6 {
    grid-column: span 6; }
  .col-md-7 {
    grid-column: span 7; }
  .col-md-8,
  .col-md-full {
    grid-column: span 8; } }

@media (min-width: 1024px) {
  .col-lg-1 {
    grid-column: span 1; }
  .col-lg-2 {
    grid-column: span 2; }
  .col-lg-3,
  .col-lg-quoter {
    grid-column: span 3; }
  .col-lg-4,
  .col-lg-third {
    grid-column: span 4; }
  .col-lg-5 {
    grid-column: span 5; }
  .col-lg-6,
  .col-lg-half {
    grid-column: span 6; }
  .col-lg-7 {
    grid-column: span 7; }
  .col-lg-8,
  .col-lg-2-thirds {
    grid-column: span 8; }
  .col-lg-9,
  .col-lg-3-quoters {
    grid-column: span 9; }
  .col-lg-10 {
    grid-column: span 10; }
  .col-lg-11 {
    grid-column: span 11; }
  .col-lg-12,
  .col-lg-full {
    grid-column: span 12; } }

.alert {
  background-color: #f9f9ae;
  border-radius: 3px;
  -webkit-box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12), 0 1px 0 0 rgba(0, 0, 0, 0.06);
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12), 0 1px 0 0 rgba(0, 0, 0, 0.06);
  color: rgba(0, 0, 0, 0.87);
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", Helvetica, "Segoe UI", "Noto Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1.4rem;
  line-height: 1.714;
  margin-bottom: 2.4rem;
  padding: 1.6rem;
  position: relative; }
  @media (min-width: 768px) {
    .alert {
      padding: 2.4rem; } }

.alert.is-global {
  border-radius: 0;
  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.12), 0 1px 0 0 rgba(0, 0, 0, 0.06);
  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.12), 0 1px 0 0 rgba(0, 0, 0, 0.06);
  text-align: center;
  margin-bottom: 0;
  padding: 2.4rem 1.6rem; }
  .alert.is-global > p {
    text-align: left;
    margin: 0 auto;
    padding-left: 4.8rem;
    position: relative;
    min-height: 4.8rem;
    max-width: 1742px; }
  .alert.is-global > p .icon {
    position: absolute;
    top: 50%;
    left: 0;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    width: 2.8rem;
    height: 2.8rem; }

.is-waring {
  background: #f9f9ae; }

.alert.is-warning .icon__body {
  fill: #eaea10; }

.alert.is-warning .icon__details {
  fill: rgba(0, 0, 0, 0.54); }

.is-danger {
  background: #ffa694; }

.hero {
  --magic-position: center bottom -10rem;
  background-color: #f5826b;
  background-image: url("/img/components/hero/bottom-magic-sparks.svg"), url("/img/components/hero/bottom-magic.svg");
  background-position: right -2.4rem top 2.4rem, var(--magic-position);
  background-repeat: no-repeat;
  background-size: auto, cover;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  min-height: 44.6rem; }
  @media (min-width: 768px) {
    .hero {
      padding-top: 0;
      min-height: 57.6rem; } }
  @media (min-width: 1024px) {
    .hero {
      --magic-position: center bottom -22rem; } }
  @media (min-width: 1920px) {
    .hero {
      --magic-position: center bottom -40rem; } }

.hero__eyebrow {
  background: #8a1f0a;
  color: white;
  font-size: 1.4rem;
  line-height: var(--size-2);
  margin-bottom: calc(var(--size-line) * 2);
  padding: calc(var(--size-2) + .3rem) var(--size-2) 0;
  width: 100%;
  height: 6.4rem; }
  @media (min-width: 568px) {
    .hero__eyebrow {
      padding-top: calc(var(--size-line) + .3rem); } }
  @media (min-width: 768px) {
    .hero__eyebrow {
      margin-bottom: calc(var(--size-line) * 2 + 1.2rem); } }

.hero__title {
  color: #8a1f0a; }

.hero__subtitle {
  color: rgba(0, 0, 0, 0.54);
  margin-right: auto;
  margin-bottom: 0;
  margin-left: auto;
  max-width: 63.2rem; }
  @media (min-width: 1024px) {
    .hero__subtitle {
      margin-top: 1rem; } }

.hero .btn.is-link {
  color: rgba(255, 255, 255, 0.7);
  background: rgba(0, 0, 0, 0) url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%3E%3Cpath%20fill%3D%22%23FFF%22%20fill-opacity%3D%22.5%22%20fill-rule%3D%22evenodd%22%20d%3D%22M8%2C0%20C12.418278%2C0%2016%2C3.581722%2016%2C8%20C16%2C12.418278%2012.418278%2C16%208%2C16%20C3.581722%2C16%200%2C12.418278%200%2C8%20C0%2C3.581722%203.581722%2C0%208%2C0%20Z%20M8%2C2%20C4.6862915%2C2%202%2C4.6862915%202%2C8%20C2%2C11.3137085%204.6862915%2C14%208%2C14%20C11.3137085%2C14%2014%2C11.3137085%2014%2C8%20C14%2C4.6862915%2011.3137085%2C2%208%2C2%20Z%20M6%2C4%20L12%2C8%20L6%2C12%20L6%2C4%20Z%22%2F%3E%3C%2Fsvg%3E") no-repeat;
  padding-left: 2.4rem; }

.section__body {
  margin-right: auto;
  margin-left: auto;
  padding-top: 2.4rem;
  padding-bottom: 2.4rem;
  max-width: 63.2rem; }
  @media (min-width: 768px) {
    .section__body {
      padding-top: 4.8rem;
      padding-bottom: 4.8rem; } }

.section__body.has-top-text {
  padding-top: 2.7rem; }
  @media (min-width: 768px) {
    .section__body.has-top-text {
      padding-top: 5.1rem; } }

@media (min-width: 768px) {
  .section__body.has-top-text.is-compact {
    padding-top: 2.4rem; } }

.section__body.has-bottom-text {
  padding-bottom: 1.8rem; }
  @media (min-width: 768px) {
    .section__body.has-bottom-text {
      padding-bottom: 4.2rem; } }

.is-full-bleed {
  text-align: center;
  margin-left: 50%;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
  width: 100vw; }

.carousel {
  position: relative;
  margin-bottom: 2.4rem; }

.carousel__inner {
  overflow: hidden;
  padding-top: .1rem;
  padding-bottom: 7.4rem;
  position: relative;
  width: 100%; }
  .carousel__inner::after {
    clear: both;
    content: '';
    display: block; }

.carousel-item {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: none;
  float: left;
  margin-right: -100%;
  margin-bottom: 0;
  position: relative;
  -webkit-transition: -webkit-transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  transition: -webkit-transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  width: 100%; }

.carousel-item img {
  -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 16px 17px -5px rgba(0, 0, 0, 0.19), 0 29px 53px -10px rgba(0, 0, 0, 0.12);
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 16px 17px -5px rgba(0, 0, 0, 0.19), 0 29px 53px -10px rgba(0, 0, 0, 0.12); }

.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
  display: block;
  -webkit-transition: -webkit-transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  transition: -webkit-transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.8s cubic-bezier(0.4, 0, 0.2, 1); }

.carousel-item-next:not(.carousel-item-left),
.active.carousel-item-right {
  -webkit-transform: translateX(100%);
  transform: translateX(100%); }

.carousel-item-prev:not(.carousel-item-right),
.active.carousel-item-left {
  -webkit-transform: translateX(-100%);
  transform: translateX(-100%); }

.carousel__control {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  opacity: 0.64;
  position: absolute;
  top: 0;
  bottom: 7.4rem;
  -webkit-transition: background-color 0.25s;
  transition: background-color 0.25s;
  width: 6.4rem;
  z-index: 1; }
  .carousel__control:hover, .carousel__control:focus {
    outline: 0;
    opacity: 1; }

.carousel__control.is-prev {
  left: 0; }
  @media (min-width: 768px) {
    .carousel__control.is-prev {
      left: 1.6rem; } }

.carousel__control.is-next {
  right: 0; }
  @media (min-width: 768px) {
    .carousel__control.is-next {
      right: 1.6rem; } }

.carousel__control .icon {
  background: rgba(0, 0, 0, 0) url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20width%3D%2264%22%20height%3D%2264%22%20viewBox%3D%220%200%2064%2064%22%3E%20%3Cdefs%3E%20%3Crect%20id%3D%2201-b%22%20width%3D%2246%22%20height%3D%2246%22%20x%3D%229%22%20y%3D%229%22%20rx%3D%2212%22%2F%3E%20%3Cfilter%20id%3D%2201-a%22%20width%3D%22217.4%25%22%20height%3D%22217.4%25%22%20x%3D%22-58.7%25%22%20y%3D%22-41.3%25%22%20filterUnits%3D%22objectBoundingBox%22%3E%20%3CfeMorphology%20in%3D%22SourceAlpha%22%20radius%3D%222%22%20result%3D%22shadowSpreadOuter1%22%2F%3E%20%3CfeOffset%20dy%3D%228%22%20in%3D%22shadowSpreadOuter1%22%20result%3D%22shadowOffsetOuter1%22%2F%3E%20%3CfeGaussianBlur%20in%3D%22shadowOffsetOuter1%22%20result%3D%22shadowBlurOuter1%22%20stdDeviation%3D%228%22%2F%3E%20%3CfeColorMatrix%20in%3D%22shadowBlurOuter1%22%20result%3D%22shadowMatrixOuter1%22%20values%3D%220%200%200%200%200%20%20%200%200%200%200%200%20%20%200%200%200%200%200%20%200%200%200%200.12%200%22%2F%3E%20%3CfeMorphology%20in%3D%22SourceAlpha%22%20radius%3D%22.5%22%20result%3D%22shadowSpreadOuter2%22%2F%3E%20%3CfeOffset%20dy%3D%222%22%20in%3D%22shadowSpreadOuter2%22%20result%3D%22shadowOffsetOuter2%22%2F%3E%20%3CfeGaussianBlur%20in%3D%22shadowOffsetOuter2%22%20result%3D%22shadowBlurOuter2%22%20stdDeviation%3D%222%22%2F%3E%20%3CfeColorMatrix%20in%3D%22shadowBlurOuter2%22%20result%3D%22shadowMatrixOuter2%22%20values%3D%220%200%200%200%200%20%20%200%200%200%200%200%20%20%200%200%200%200%200%20%200%200%200%200.24%200%22%2F%3E%20%3CfeMorphology%20in%3D%22SourceAlpha%22%20operator%3D%22dilate%22%20radius%3D%22.5%22%20result%3D%22shadowSpreadOuter3%22%2F%3E%20%3CfeOffset%20in%3D%22shadowSpreadOuter3%22%20result%3D%22shadowOffsetOuter3%22%2F%3E%20%3CfeColorMatrix%20in%3D%22shadowOffsetOuter3%22%20result%3D%22shadowMatrixOuter3%22%20values%3D%220%200%200%200%200%20%20%200%200%200%200%200%20%20%200%200%200%200%200%20%200%200%200%200.12%200%22%2F%3E%20%3CfeMerge%3E%20%3CfeMergeNode%20in%3D%22shadowMatrixOuter1%22%2F%3E%20%3CfeMergeNode%20in%3D%22shadowMatrixOuter2%22%2F%3E%20%3CfeMergeNode%20in%3D%22shadowMatrixOuter3%22%2F%3E%20%3C%2FfeMerge%3E%20%3C%2Ffilter%3E%20%3C%2Fdefs%3E%20%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%20%3Cuse%20fill%3D%22%23000%22%20filter%3D%22url%28%2301-a%29%22%20xlink%3Ahref%3D%22%2301-b%22%2F%3E%20%3Cuse%20fill%3D%22%23FFF%22%20xlink%3Ahref%3D%22%2301-b%22%2F%3E%20%3Cpolygon%20fill%3D%22%23000%22%20fill-opacity%3D%22.38%22%20fill-rule%3D%22nonzero%22%20points%3D%2229.484%2021.393%2038.484%2032%2029.484%2042.607%2027.516%2040.289%2034.55%2032%2027.517%2023.711%22%2F%3E%20%3C%2Fg%3E%20%3C%2Fsvg%3E") no-repeat;
  display: inline-block;
  width: 6.4rem;
  height: 6.4rem; }

.carousel__control.is-prev .icon {
  -webkit-transform: scaleX(-1);
  transform: scaleX(-1); }

.carousel-indicators {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  list-style: none;
  margin-right: 4.8rem;
  margin-left: 4.8rem;
  padding-left: 0;
  position: absolute;
  right: 0;
  bottom: .4rem;
  left: 0;
  z-index: 15; }
  .carousel-indicators li {
    background-clip: padding-box;
    background-color: rgba(0, 0, 0, 0.12);
    border-top: 1rem solid transparent;
    border-bottom: 1rem solid transparent;
    -webkit-box-sizing: content-box;
    box-sizing: content-box;
    cursor: pointer;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 auto;
    flex: 0 1 auto;
    text-indent: -999px;
    margin-left: 0;
    margin-right: 0;
    width: 1.6rem;
    height: 0.8rem; }
  .carousel-indicators .active {
    background-color: #f5826b; }
  @media (min-width: 768px) {
    .carousel-indicators {
      margin-right: 6.4rem;
      margin-left: 6.4rem; } }

.carousel__caption {
  text-align: center;
  padding-top: var(--size-2);
  padding-right: 1.6rem;
  padding-left: 1.6rem;
  opacity: 0;
  position: absolute;
  right: 0;
  bottom: -7.4rem;
  left: 0;
  -webkit-transition: opacity 0.2s;
  transition: opacity 0.2s;
  height: 7.4rem; }
  .carousel-item.active .carousel__caption {
    opacity: 1; }
  .carousel__caption > div {
    color: rgba(0, 0, 0, 0.38); }

.modal-open {
  overflow: hidden; }
  .modal-open .modal {
    overflow-x: hidden;
    overflow-y: auto; }

.modal {
  display: none;
  outline: 0;
  overflow: hidden;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050; }

.modal-dialog {
  margin: 0;
  padding: 1.6rem;
  pointer-events: none;
  position: relative;
  width: 100%; }
  .modal.fade .modal-dialog {
    -webkit-transform: translate(0, -25%);
    transform: translate(0, -25%);
    -webkit-transition: -webkit-transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    transition: -webkit-transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.5s cubic-bezier(0.4, 0, 0.2, 1); }
  .modal.show .modal-dialog {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  @media (min-width: 768px) {
    .modal-dialog {
      margin: 4.8rem auto;
      padding: 0;
      max-width: 740px; } }

.modal__content {
  background-color: white;
  border-radius: 0;
  -webkit-box-shadow: 0 24px 24px -8px rgba(0, 0, 0, 0.16), 0 40px 72px -12px rgba(0, 0, 0, 0.12);
  box-shadow: 0 24px 24px -8px rgba(0, 0, 0, 0.16), 0 40px 72px -12px rgba(0, 0, 0, 0.12);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0;
  outline: 0;
  pointer-events: auto;
  position: relative;
  width: 100%; }

.modal__content.has-enlarged-img {
  background: rgba(0, 0, 0, 0);
  padding: 0; }
  .modal__content.has-enlarged-img > .modal__body {
    border-radius: 5px;
    overflow: hidden; }

.modal-backdrop {
  background-color: #000;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040; }
  .modal-backdrop.fade {
    opacity: 0; }
  .modal-backdrop.show {
    opacity: .54; }

.modal-scrollbar-measure {
  overflow: scroll;
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px; }

.modal__title {
  color: rgba(0, 0, 0, 0.87);
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", Helvetica, "Segoe UI", "Noto Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 3.2rem;
  font-weight: 400;
  line-height: 1.25;
  margin-bottom: 0; }
  @media (min-width: 768px) {
    .modal__title {
      font-size: 3.2rem;
      letter-spacing: -.1rem;
      line-height: 1.25;
      margin-bottom: 0; } }

.modal__close {
  background: white;
  -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12);
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.24), 0 8px 16px -4px rgba(0, 0, 0, 0.12);
  border-radius: 50rem;
  padding: 0;
  position: absolute;
  top: -0.8rem;
  right: -0.8rem;
  -webkit-transition: background-color 0.1s;
  transition: background-color 0.1s;
  width: 3.2rem;
  height: 3.2rem; }
  .modal__close:hover {
    background: #ffeeeb; }

.modal__close > .icon {
  width: 1.6rem;
  height: 1.6rem; }

.footer {
  color: rgba(0, 0, 0, 0.54);
  text-align: center;
  padding: 6rem 1.6rem 6.5rem; }

.footer > .btn {
  margin-right: auto;
  margin-left: auto;
  margin-bottom: 6.1rem; }

.footer > p {
  font-size: 1.4rem;
  line-height: 1.714; }

@media (min-width: 768px) {
  .carousel.is-main {
    margin-top: -9.1rem; } }

@media (max-width: 1149.98px) {
  .section.is-need > .section__body {
    padding-top: 0; } }

.section__header.is-magic .border {
  display: none; }
  @media (min-width: 768px) {
    .section__header.is-magic .border {
      display: block;
      grid-column: 1 / span 3;
      max-width: 23.2rem; } }
  @media (min-width: 1024px) {
    .section__header.is-magic .border {
      grid-column: 3 / span 3; } }

.section__header.is-magic .section__header-content {
  grid-column: 1 / span 4; }
  @media (min-width: 568px) {
    .section__header.is-magic .section__header-content {
      grid-column: 1 / span 8; } }
  @media (min-width: 768px) {
    .section__header.is-magic .section__header-content {
      grid-column: 4 / span 5; } }
  @media (min-width: 1024px) {
    .section__header.is-magic .section__header-content {
      grid-column: 7 / span 4; } }

.grid.is-features {
  padding-top: .8rem;
  margin-bottom: .9rem; }
  @media (min-width: 768px) {
    .grid.is-features {
      grid-column-gap: 3.2rem;
      grid-row-gap: 3.2rem;
      margin-bottom: 8.9rem; } }
  @media (min-width: 1024px) {
    .grid.is-features {
      grid-column-gap: 4.8rem;
      grid-row-gap: 5.6rem; } }

.feature {
  grid-column: span 4; }

.feature > figure {
  background-color: #f5826b;
  border-radius: 12px;
  -webkit-box-shadow: 0 9px 10px -3px rgba(0, 0, 0, 0.21), 0 18px 34px -7px rgba(0, 0, 0, 0.12);
  box-shadow: 0 9px 10px -3px rgba(0, 0, 0, 0.21), 0 18px 34px -7px rgba(0, 0, 0, 0.12);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-bottom: 2.2rem;
  width: 4.8rem;
  height: 4.8rem; }
  .feature > figure > .icon {
    fill: white; }

@media (min-width: 1024px) {
  .feature:nth-child(1),
  .feature:nth-child(3) {
    grid-column: 3 / span 4; } }

.feature > h3 {
  margin-top: 0;
  margin-bottom: .1rem; }

.feature > p {
  margin-bottom: 3.2rem; }
  @media (min-width: 768px) {
    .feature > p {
      margin-bottom: 0; } }

.logos {
  text-align: center;
  margin: -1.6rem auto 0;
  padding-bottom: calc(var(--size-line) + 1.8rem); }
  .logos > figcaption {
    padding-top: var(--size-2); }

.logos__title {
  margin: 0;
  padding-top: var(--size-line);
  color: var(--color-ink-normal); }

.section.is-early-access {
  text-align: center;
  padding-right: var(--size-2);
  padding-left: var(--size-2); }

@media (min-width: 1024px) {
  .section.is-early-access .section__title,
  .section.is-early-access .section__subtitle {
    margin-right: auto;
    margin-left: auto;
    max-width: 66.3866%; } }

.section.is-early-access .form__control {
  text-align: center;
  grid-column: 1 / span 4; }
  @media (min-width: 568px) {
    .section.is-early-access .form__control {
      text-align: left;
      grid-column: 2 / span 4; } }
  @media (min-width: 1024px) {
    .section.is-early-access .form__control {
      grid-column: 3 / span 6; } }

.section.is-early-access .btn.is-primary {
  grid-column: 2 / span 2; }
  @media (min-width: 568px) {
    .section.is-early-access .btn.is-primary {
      grid-column: 6 / span 2; } }
  @media (min-width: 1024px) {
    .section.is-early-access .btn.is-primary {
      grid-column: 9 / span 2; } }

.br {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  height: 0; }

@media (min-width: 768px) {
  .br-md {
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    height: 0; } }

@media (min-width: 1024px) {
  .br-lg {
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    height: 0; } }

.is-pulled-up-1 {
  margin-top: -1.6rem; }

.w-100 {
  width: 100% !important; }

@media print {
  .header,
  .sidebar,
  .footer {
    display: none !important; }
  *,
  *::before,
  *::after {
    background: transparent !important;
    color: #000 !important;
    -webkit-box-shadow: none !important;
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]::after {
    content: ' (" attr(href) ")'; }
  abbr[title]::after {
    content: ' (" attr(title) ")'; }
  a[href^='#']::after,
  a[href^='javascript:']::after {
    content: ''; }
  pre {
    white-space: pre-wrap !important; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

:root {
  --color-primary:                      hsl(240, 60%, 50%);
  --color-primary-shade1:               hsl(240, 60%, calc(50% - 5%));
  --color-primary-tint1:                hsl(240, 60%, calc(50% + 5%));
  --color-primary-tint2:                hsl(240, 60%, calc(50% + 10%));
  --color-primary-tint3:                hsl(240, 60%, calc(50% + 25%));
  --color-primary-darkest:              hsl(240, calc(50% - 40%), calc(50% -30%));
  --color-primary-lightest:             hsl(240, 60%, calc(50% + 45%));
  --color-primary-scrim:                hsla(240, 60%, 50%, .8);
  --color-background-normal:            white;
  --color-background-accent:            var(--color-primary-lightest);
  --color-background-inverse:           var(--color-primary-darkest);
  --color-error:                        #cc3333;
  --color-ink-error:                    hsl(0, 60%, calc(50% -10%));
  --color-background-error:             hsl(0, 60%, calc(50% + 45%));
  --color-info:                         var(--color-primary);
  --color-success:                      hsl(120, 60%, 50%);
  --color-warning:                      hsl(60, calc(60% + 20%), 50%);
  --color-background-warning:           hsl(60, calc(60% + 20%), calc(50% + 45%));
  --color-highlight:                    hsl(60, calc(60% + 20%), 50%);
  --color-ink-normal:                   rgba(0, 0, 0, 0.87);
  --color-ink-muted:                    rgba(0, 0, 0, 0.54);
  --color-ink-hint:                     rgba(0, 0, 0, 0.38);
  --color-ink-disabled:                 rgba(0, 0, 0, 0.38);
  --color-ink-icon:                     rgba(0, 0, 0, 0.22);
  --color-ink-border:                   rgba(0, 0, 0, 0.12);
  --color-ink-link:                     #3333cc;
  --color-ink-focus-outline:            var(--color-primary-tint3);
  --color-ink-accent-normal:            rgba(0, 0, 0, 0.87);
  --color-ink-accent-muted:             rgba(0, 0, 0, 0.54);
  --color-ink-accent-hint:              rgba(0, 0, 0, 0.38);
  --color-ink-accent-disabled:          rgba(0, 0, 0, 0.38);
  --color-ink-accent-icon:              rgba(0, 0, 0, 0.22);
  --color-ink-accent-border:            rgba(0, 0, 0, 0.12);
  --color-ink-accent-link:              #3333cc;
  --color-ink-accent-focus-outline:     var(--color-primary-tint3);
  --color-ink-inverse-normal:           white;
  --color-ink-inverse-muted:            rgba(255, 255, 255, 0.7);
  --color-ink-inverse-hint:             rgba(255, 255, 255, 0.5);
  --color-ink-inverse-disabled:         rgba(255, 255, 255, 0.5);
  --color-ink-inverse-icon:             rgba(255, 255, 255, 0.5);
  --color-ink-inverse-border:           rgba(255, 255, 255, 0.12);
  --color-ink-inverse-link:             hsl(240, 60%, calc(50% + 5%));
  --hover-brightness:                   1.2;
  --size-1:                             .8rem;
  --size-2:                             calc(var(--size-1) * 2);
  --size-3:                             calc(var(--size-1) * 3);
  --size-4:                             calc(var(--size-1) * 4);
  --size-5:                             calc(var(--size-1) * 5);
  --size-6:                             calc(var(--size-1) * 6);
  --size-7:                             calc(var(--size-1) * 7);
  --size-8:                             calc(var(--size-1) * 8);
  --size-line:                          var(--size-3);
  --font-family-base:
   'Helvetica Neue',
    Helvetica,
   'Roboto',
    Arial,
    sans-serif,
   'Apple Color Emoji',
   'Segoe UI Emoji',
   'Segoe UI Symbol',
   'Noto Color Emoji';
  --font-family-accent:
   -apple-system,
    BlinkMacSystemFont,
   'Helvetica Neue',
    Helvetica,
   'Roboto',
   'Segoe UI',
   'Noto Sans',
    Arial,
    sans-serif,
   'Apple Color Emoji',
   'Segoe UI Emoji',
   'Segoe UI Symbol',
   'Noto Color Emoji';
  --font-family-monospace:
   'Fira Code',
    Menlo,
    Courier,
   'Courier New',
    monospace;
  --font-family-serif:
   'EB Garamond',
    Georgia,
    Times,
   'Times New Roman',
    serif,
   'Apple Color Emoji',
   'Segoe UI Emoji',
   'Segoe UI Symbol',
   'Noto Color Emoji';
  --font-size-hero:                     var(--size-8);
  --line-height-hero:                   calc(
                                          (var(--font-size-hero) + var(--size-1))
                                          / var(--font-size-hero)
                                        );
  --font-size-h1:                       var(--size-4);
  --line-height-h1:                     calc(
                                          (var(--font-size-h1) + var(--size-1))
                                          / var(--font-size-h1)
                                        );
  --font-weight-h1:                     400;
  --font-size-h2:                       var(--size-3);
  --line-height-h2:                     calc(
                                          (var(--font-size-h2) + var(--size-1))
                                          / var(--font-size-h2)
                                        );
  --font-weight-h2:                     500;
  --font-size-big:                      calc((var(--size-1) * 2.5));
  --line-height-big:                    line-height(20);
  --font-size-base:                     var(--size-2);
  --line-height-base:                   1.5;
  --font-size-small:                    calc(var(--size-1) * 1.5);
  --line-height-small:                  1.333;
  --type-body-copy-vr-offset:           .6rem;
  --list-bullet:                        url('data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%225%22%20height%3D%227%22%20viewBox%3D%220%200%205%207%22%3E%3Ccircle%20cx%3D%222.5%22%20cy%3D%222.5%22%20r%3D%222.5%22%20fill-opacity%3D%22.38%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E');
  --border-width:                       .1rem;
  --border-radius-sm:                   .3rem;
  --border-radius:                      .5rem;
  --border-radius-lg:                   1.2rem;
  --border-radius-xl:                   2.4rem;
  --box-shadow-z1: 0 1px 1px 0 rgba(0, 0, 0, .04);
  --box-shadow-z2:
    0 1px 1px 0 rgba(0, 0, 0, .04),
    0 13px 13px -1px rgba(0, 0, 0, .04);
  --box-shadow-z3:
    0 1px 1px 0 rgba(0, 0, 0, .04),
    0 13px 13px -1px rgba(0, 0, 0, .04),
    0 25px 25px -3px rgba(0, 0, 0, .04);
  --box-shadow-z4:
    0 1px 1px 0 rgba(0, 0, 0, .04),
    0 13px 13px -1px rgba(0, 0, 0, .04),
    0 25px 25px -3px rgba(0, 0, 0, .04),
    0 37px 37px -6px rgba(0, 0, 0, .04);
  --box-shadow-z5:
    0 1px 1px 0 rgba(0, 0, 0, .04),
    0 13px 13px -1px rgba(0, 0, 0, .04),
    0 25px 25px -3px rgba(0, 0, 0, .04),
    0 37px 37px -6px rgba(0, 0, 0, .04),
    0 24px 48px -12px rgba(0, 0, 0, .04);
  --box-shadow-focus-outline:           0 0 0 4px hsla(240, 60%, calc(50% - 5), .5);
  --zindex-dropdown:                    1000;
  --zindex-sticky:                      1020;
  --zindex-fixed:                       1030;
  --zindex-popover:                     1040;
  --zindex-tooltip:                     1050;
  --zindex-overlay:                     1060;
  --zindex-drawer:                      1070;
  --zindex-modal:                       1080;
  --width-xs:                           200px;
  --width-sm:                           280px;
  --width:                              320px;
  --width-md:                           640px;
  --width-lg:                           800px;
  --box-padding-sm:                     var(--size-2);
  --box-padding-line:                   var(--size-line);
  --box-padding-lg:                     var(--size-4);
  --box-padding-xl:                     var(--size-5);
  --chevron:                            url('data:image/svg+xml;charset=utf-8,%3C?xml version='1.0' encoding='utf-8'?%3E %3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' height='62.5' width='116.9' fill='%23161f27'%3E %3Cpath d='M115.3,1.6 C113.7,0 111.1,0 109.5,1.6 L58.5,52.7 L7.4,1.6 C5.8,0 3.2,0 1.6,1.6 C0,3.2 0,5.8 1.6,7.4 L55.5,61.3 C56.3,62.1 57.3,62.5 58.4,62.5 C59.4,62.5 60.5,62.1 61.3,61.3 L115.2,7.4 C116.9,5.8 116.9,3.2 115.3,1.6Z'/%3E %3C/svg%3E');
  --duration-xs:                        .1s;
  --duration-sm:                        .2s;
  --duration:                           .25s;
  --duration-md:                        .3s;
  --duration-lg:                        .5s;
  --duration-xl:                        .8s;
  --easing:                             cubic-bezier(.4, 0, .2, 1);
  --easing-appearance:                  cubic-bezier(0, 0, .2, 1);
  --easing-disappearance:               cubic-bezier(.4, 0, 1, 1);
  --easing-bounce:                      cubic-bezier(.175, .885, .32, 1.275); }
  @media (min-width: 768px) {
    :root {
      --font-size-h1:                     calc((var(--size-1) * 10));
      --font-size-h2:                     var(--size-8); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
